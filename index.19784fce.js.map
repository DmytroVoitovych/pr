{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,oDCAAA,EAAA,SAEA,IDQIC,EAAe,OAEbC,EAAiB,IAAI,EAAAC,EAAAC,SA2B3B,SAASC,IACPH,EAAeI,iBAAiBC,MAAK,SAAAC,GAEnCC,KACA,EAAAC,EAAAC,kBAAiBH,EAAMN,EAAeU,YAAaV,EAAeW,aA9BtEX,EAAeY,gBACfC,EAAAC,OAAOC,KCZc,CACnBC,SAAU,aACVC,QAAS,IACTC,SAAU,OAEVC,MAAO,QAEPC,SAAU,OACVC,kBAAmB,WACnBC,qBAAsB,IACtBC,oBAAoB,EAEpBC,SAAS,EACTC,cAAc,EACdC,QAAS,CACPC,WAAY,kBACZC,UAAW,UACXC,kBAAmB,qBAErBC,QAAS,CACPH,WAAY,kBACZC,UAAW,UACXC,kBAAmB,0BDRvBE,EAAAC,KAAKC,gBAAgBC,iBAAiB,SAQtC,SAAgCC,GAC9B,IAAMC,EAAcD,EAAME,OAAOC,QAAQC,KACzC,IAAKH,EACH,OAEFpC,EAAeU,YAAc8B,OAAOJ,GAEf,SAAjBrC,EACFI,IAuEFH,EACGyC,oBACApC,MAAK,SAAAC,GACJC,KACA,EAAAC,EAAAC,kBACEH,EAAKoC,QACL1C,EAAeU,YACfV,EAAeW,aAGlBgC,OAAM,SAAAC,GACL,OAAOA,MA9EX,EAAApC,EAAAqC,kBAnBFd,EAAAC,KAAKc,KAAKZ,iBAAiB,UAiD3B,SAAsBC,GACpBA,EAAMY,iBACN,IAAMC,EAAcb,EAAMc,cAAcC,SAASF,YAAYG,MAAMC,OAEnE,GADArB,EAAAC,KAAKc,KAAKI,SAASF,YAAYG,MAAQ,GACnB,KAAhBH,EAGF,OAFAK,QAAQC,IAAI,aACZzC,EAAAC,OAAOY,QAAQ,yBAA0B,CAAEP,MAAO,UAGpDnB,EAAegD,YAAcA,EAC7B,IAAMO,EAAWvD,EAAeU,YAChCV,EAAeU,YAAc,EAC7BV,EACGyC,oBACApC,MAAK,SAAAC,GAEJ,GADA+C,QAAQC,IAAIhD,GACgB,IAAxBA,EAAKoC,QAAQc,OAKf,OAJA3C,EAAAC,OAAOY,QACL,oEAEF1B,EAAeU,YAAc6C,GAG/BvD,EAAeW,SAAWL,EAAKmD,YAC/B1D,EAAe,SACfQ,KACA,EAAAC,EAAAC,kBACEH,EAAKoC,QACL1C,EAAeU,YACfV,EAAeW,aAGlBgC,OAAM,SAAAC,GACL,OAAOA,QAhFbb,EAAAC,KAAK0B,YAAYC,UAAUC,IAAI,QAC/BzD,KAEA,EAAAN,EAAAgE,eA6BA,IAAMC,EAAM,W,OAAMC,SAASC,cAAc,YAAYC,aAAa,OAAQ,2BAkE1E,SAAS1D,IACPwB,EAAAC,KAAK0B,YAAYQ,UAAY,GAC7BnC,EAAAC,KAAKC,gBAAgBiC,UAAY,IAlEN,WAEzB,GAAoB,SADCH,SAASC,cAAc,eAAe1B,QAAU6B,OAAOC,aAAaC,QAAQ,SAE7FhB,QAAQC,IAAI,QACLS,SAASC,cAAc,YAAY9B,iBAAiB,QAAU4B,GAK7EQ,G","sources":["src/index.js","src/js/notify-params/notify-styles.js"],"sourcesContent":["import { btnDayNight } from './js/btnDayNight';\n\nimport { renderMoviesList, scrollToTop } from './js/container';\nimport MovieAPiServer from './RequestApi/requestAPI';\n// import './js/notify-params/notify-styles';\nimport { refs } from './js/refs';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nimport { paramsNotify } from './js/notify-params/notify-styles';\nlet currentGroup = 'home';\n\nconst movieAPiServer = new MovieAPiServer();\nmovieAPiServer.getGenresList();\nNotify.init(paramsNotify);\n\nrefs.pagginationList.addEventListener('click', onClickPagginationList);\nrefs.form.addEventListener('submit', onSubmitForm);\n\nrefs.galleryList.classList.add('home');\nfetchData();\n\nbtnDayNight();\n\nfunction onClickPagginationList(event) {\n  const currentPage = event.target.dataset.page;\n  if (!currentPage) {\n    return;\n  }\n  movieAPiServer.pageCounter = Number(currentPage);\n\n  if (currentGroup === 'home') {\n    fetchData();\n  } else {\n    fetchMovieByQueryAgain();\n  }\n  scrollToTop();\n}\n\nfunction fetchData() {\n  movieAPiServer.fetchTopMovies().then(data => {\n    // console.log('page=', apiService.page, '  maxPages=', apiService.maxPages);\n    clearList();\n    renderMoviesList(data, movieAPiServer.pageCounter, movieAPiServer.maxPages);\n  });\n  // .catch(error => {\n  //   return error;\n  // });\n}\n\n\nconst red = () => document.querySelector('.js-auth').setAttribute('href', '/js/AutoForm/form.html');\n\nconst funcAutoLoginControl = () => {\n    const controlLogin = document.querySelector('[data-auth]').dataset = window.localStorage.getItem('auth');\n    if (controlLogin != 'true') {\n        console.log('test');\n        return document.querySelector('.js-auth').addEventListener('click',  red); \n    }\n    return;\n    \n};\nfuncAutoLoginControl();\n\n\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const searchQuery = event.currentTarget.elements.searchQuery.value.trim();\n  refs.form.elements.searchQuery.value = '';\n  if (searchQuery === '') {\n    console.log('test');\n    Notify.failure('Please enter something', { width: '180px' });\n    return;\n  }\n  movieAPiServer.searchQuery = searchQuery;\n  const pageHome = movieAPiServer.pageCounter;\n  movieAPiServer.pageCounter = 1;\n  movieAPiServer\n    .fetchMovieByQuery()\n    .then(data => {\n      console.log(data);\n      if (data.results.length === 0) {\n        Notify.failure(\n          'Search result not successful.. Enter the correct movie name'\n        );\n        movieAPiServer.pageCounter = pageHome;\n        return;\n      }\n      movieAPiServer.maxPages = data.total_pages;\n      currentGroup = 'search';\n      clearList();\n      renderMoviesList(\n        data.results,\n        movieAPiServer.pageCounter,\n        movieAPiServer.maxPages\n      );\n    })\n    .catch(error => {\n      return error;\n    });\n}\nfunction fetchMovieByQueryAgain() {\n  movieAPiServer\n    .fetchMovieByQuery()\n    .then(data => {\n      clearList();\n      renderMoviesList(\n        data.results,\n        movieAPiServer.pageCounter,\n        movieAPiServer.maxPages\n      );\n    })\n    .catch(error => {\n      return error;\n    });\n}\nfunction clearList() {\n  refs.galleryList.innerHTML = '';\n  refs.pagginationList.innerHTML = '';\n}\n\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst paramsNotify = {\n  position: 'center-top',\n  timeout: 3000,\n  distance: '15px',\n  // fontAwesomeIconSize: '10px', //\n  width: '390px',\n\n  fontSize: '14px', //\n  cssAnimationStyle: 'from-top',\n  cssAnimationDuration: 600,\n  showOnlyTheLastOne: true,\n\n  useIcon: false,\n  clickToClose: true,\n  failure: {\n    background: 'rgba(0,0,0,0.1)',\n    textColor: '#FF001B',\n    notiflixIconColor: 'rgba(200,0,0,0.4)',\n  },\n  success: {\n    background: 'rgba(0,0,0,0.7)',\n    textColor: '#32c682',\n    notiflixIconColor: 'rgba(50,200,130,0.4)',\n  },\n};\nexport { paramsNotify };\n//  return Notify.failure('Search result not successful. Enter the correct movie name.');\n"],"names":["$7kasF","parcelRequire","$b8f9b7833fa37166$var$currentGroup","$b8f9b7833fa37166$var$movieAPiServer","$cmNEd","default","$b8f9b7833fa37166$var$fetchData","fetchTopMovies","then","data","$b8f9b7833fa37166$var$clearList","$g9G2c","renderMoviesList","pageCounter","maxPages","getGenresList","$h6c0i","Notify","init","position","timeout","distance","width","fontSize","cssAnimationStyle","cssAnimationDuration","showOnlyTheLastOne","useIcon","clickToClose","failure","background","textColor","notiflixIconColor","success","$4Nugj","refs","pagginationList","addEventListener","event","currentPage","target","dataset","page","Number","fetchMovieByQuery","results","catch","error","scrollToTop","form","preventDefault","searchQuery","currentTarget","elements","value","trim","console","log","pageHome","length","total_pages","galleryList","classList","add","btnDayNight","$b8f9b7833fa37166$var$red","document","querySelector","setAttribute","innerHTML","window","localStorage","getItem","$b8f9b7833fa37166$var$funcAutoLoginControl"],"version":3,"file":"index.19784fce.js.map"}