{"mappings":"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","sources":["src/index.js","src/js/notify-params/notify-styles.js","src/js/modal/modalPagination.js"],"sourcesContent":["import { btnDayNight } from './js/btnDayNight';\nimport { renderMoviesList, scrollToTop } from './js/container';\nimport MovieAPiServer from './RequestApi/requestAPI';\nimport { refs } from './js/refs';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { paramsNotify } from './js/notify-params/notify-styles';\nimport { modalPagination } from './js/modal/modalPagination';\n\n\nlet currentGroup = 'home';\n\nconst movieAPiServer = new MovieAPiServer();\nmovieAPiServer.getGenresList();\nNotify.init(paramsNotify);\n\nrefs.pagginationList.addEventListener('click', onClickPagginationList);\nrefs.form.addEventListener('submit', onSubmitForm);\nrefs.galleryList.classList.add('home');\nfetchData();\n\nbtnDayNight();\n\n// function onClickPagginationList(event) {\n//   const currentPage = event.target.dataset.page;\n//   if (!currentPage) {\n//     return;\n//   }\n//   movieAPiServer.pageCounter = Number(currentPage);\n\nfunction checkCurrentPage() {\n  if (currentGroup === 'home') {\n    fetchData();\n  } else {\n    fetchMovieByQueryAgain();\n  }\n  scrollToTop();\n}\nfunction onClickPagginationList(event) {\n  const currentPage = event.target.dataset.page;\n  if (currentPage === '...') {\n    modalPagination(movieAPiServer.maxPages)\n      .then(page => {\n        if (Number(page) === movieAPiServer.pageCounter) {\n          return;\n        }\n        console.log('перехід на сторінку ', page);\n        movieAPiServer.pageCounter = Number(page);\n        checkCurrentPage();\n      })\n      .catch(error => console.log(error));\n    return;\n  }\n  if (!currentPage) {\n    return;\n  }\n  movieAPiServer.pageCounter = Number(currentPage);\n  checkCurrentPage();\n}\n\nfunction fetchData() {\n  movieAPiServer.fetchTopMovies().then(data => {\n    // console.log('page=', apiService.page, '  maxPages=', apiService.maxPages);\n    clearList();\n    renderMoviesList(data, movieAPiServer.pageCounter, movieAPiServer.maxPages);\n  });\n  // .catch(error => {\n  //   return error;\n  // });\n}\nconsole.log(document.querySelector('.js-auth'));\n\n\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const searchQuery = event.currentTarget.elements.searchQuery.value.trim();\n  refs.form.elements.searchQuery.value = '';\n  if (searchQuery === '') {\n    console.log('test');\n    Notify.failure('Please enter something', { width: '180px' });\n    return;\n  }\n  movieAPiServer.searchQuery = searchQuery;\n  const pageHome = movieAPiServer.pageCounter;\n  movieAPiServer.pageCounter = 1;\n  movieAPiServer\n    .fetchMovieByQuery()\n    .then(data => {\n      console.log(data);\n      if (data.results.length === 0) {\n        Notify.failure(\n          'Search result not successful.. Enter the correct movie name'\n        );\n        movieAPiServer.pageCounter = pageHome;\n        return;\n      }\n      movieAPiServer.maxPages = data.total_pages;\n      currentGroup = 'search';\n      clearList();\n      renderMoviesList(\n        data.results,\n        movieAPiServer.pageCounter,\n        movieAPiServer.maxPages\n      );\n    })\n    .catch(error => {\n      return error;\n    });\n}\nfunction fetchMovieByQueryAgain() {\n  movieAPiServer\n    .fetchMovieByQuery()\n    .then(data => {\n      clearList();\n      renderMoviesList(\n        data.results,\n        movieAPiServer.pageCounter,\n        movieAPiServer.maxPages\n      );\n    })\n    .catch(error => {\n      return error;\n    });\n}\nfunction clearList() {\n  refs.galleryList.innerHTML = '';\n  refs.pagginationList.innerHTML = '';\n}\n\n\n// const red = () => document.querySelector('.js-auth').setAttribute('href', '/js/AutoForm/form.html');\n\n//   const funcAutoLoginControl = () => {\n//     const controlLogin = document.querySelector('[data-auth]').dataset.auth = window.localStorage.getItem('auth');\n//     console.log(controlLogin);\n//   if (controlLogin != 'true') {\n//     console.log('test');\n//     return document.querySelector('.js-auth').addEventListener('click', red);\n//   }\n//   return  console.log('regyes');;\n//   };\n// funcAutoLoginControl();/// конец\n\nconst red = () => {\n   const controlLogin = document.querySelector('[data-auth]').dataset.auth = window.localStorage.getItem('auth');\n    console.log(controlLogin);\n  if (controlLogin != 'true') {\n    console.log('test');\n    return document.querySelector('.js-auth').setAttribute('href', 'https://dmytrovoitovych.github.io/pr/js/AutoForm/form.html');\n  }\n  \n  // console.log(e.currentTarget.setAttribute);\n  \n};\n\ndocument.querySelector('.js-auth').addEventListener('click', red);","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst paramsNotify = {\n  position: 'center-top',\n  timeout: 3000,\n  distance: '15px',\n  // fontAwesomeIconSize: '10px', //\n  width: '390px',\n\n  fontSize: '14px', //\n  cssAnimationStyle: 'from-top',\n  cssAnimationDuration: 600,\n  showOnlyTheLastOne: true,\n\n  useIcon: false,\n  clickToClose: true,\n  failure: {\n    background: 'rgba(0,0,0,0.1)',\n    textColor: '#FF001B',\n    notiflixIconColor: 'rgba(200,0,0,0.4)',\n  },\n  success: {\n    background: 'rgba(0,0,0,0.7)',\n    textColor: '#32c682',\n    notiflixIconColor: 'rgba(50,200,130,0.4)',\n  },\n};\nexport { paramsNotify };\n//  return Notify.failure('Search result not successful. Enter the correct movie name.');\n","import { refs } from '../refs';\n\n// refs.openModalBtn.addEventListener('click', toggleModal);\n\nexport function modalPagination(maxPages) {\n  const promise = new Promise((resolve, reject) => {\n    refs.closeModalBtn.addEventListener('click', onCloseModalPagination);\n    refs.formPagination.addEventListener('submit', onInputChange);\n    // refs.closeFormButton.addEventListener('click', onCloseModalPagination);\n    refs.backdropPagination.addEventListener('click', onClickBackdrop);\n    refs.modalPagination\n      .querySelector('#pagination-input')\n      .setAttribute('max', maxPages);\n    refs.backdropPagination.dataset.page = '0';\n\n    toggleModal();\n    let timer = null;\n    document.querySelector('body').style = '';\n\n    document.querySelector('body').classList.add('is-open');\n    // document.querySelector('body').classList.toggle('is-open');\n    timer = setInterval(() => {\n      if (refs.modalPagination.classList.contains('is-hidden')) {\n        const page = refs.backdropPagination.dataset.page;\n        clearInterval(timer);\n        if (Number(page) !== 0) {\n          resolve(page);\n        } else {\n          reject('перехід не відбувся');\n        }\n      }\n    }, 300);\n  });\n\n  return promise;\n}\n\nfunction toggleModal() {\n  refs.modalPagination.classList.toggle('is-hidden');\n}\n\nfunction onInputChange(event) {\n  event.preventDefault();\n  const page = event.currentTarget.elements.page.value;\n  refs.backdropPagination.dataset.page = page;\n  onCloseModalPagination();\n}\nfunction onCloseModalPagination(event) {\n  document.querySelector('body').classList.remove('is-open');\n  refs.formPagination.elements.page.value = '';\n  toggleModal();\n}\nfunction onClickBackdrop(event) {\n  if (event.target.classList.contains('backdrop')) {\n    onCloseModalPagination();\n  }\n  if (event.target.classList.contains('button_no')) {\n    onCloseModalPagination();\n  }\n}\n"],"names":["$kaaqg","parcelRequire","$krGWQ","$130c43d65fe646a7$var$toggleModal","refs","modalPagination","classList","toggle","$130c43d65fe646a7$var$onInputChange","event","preventDefault","page","currentTarget","elements","value","backdropPagination","dataset","$130c43d65fe646a7$var$onCloseModalPagination","document","querySelector","remove","formPagination","$130c43d65fe646a7$var$onClickBackdrop","target","contains","$1f0dc3b9307be026$var$currentGroup","$1f0dc3b9307be026$var$movieAPiServer","$dy0eF","default","$1f0dc3b9307be026$var$checkCurrentPage","$1f0dc3b9307be026$var$fetchData","fetchMovieByQuery","then","data","$1f0dc3b9307be026$var$clearList","$5zoDb","renderMoviesList","results","pageCounter","maxPages","catch","error","scrollToTop","fetchTopMovies","galleryList","innerHTML","pagginationList","getGenresList","$iQIUW","Notify","init","position","timeout","distance","width","fontSize","cssAnimationStyle","cssAnimationDuration","showOnlyTheLastOne","useIcon","clickToClose","failure","background","textColor","notiflixIconColor","success","addEventListener","currentPage","Promise","resolve","reject","closeModalBtn","setAttribute","timer","style","add","setInterval","clearInterval","Number","console","log","form","searchQuery","trim","pageHome","length","total_pages","btnDayNight","controlLogin","auth","window","localStorage","getItem"],"version":3,"file":"index.1f7fddff.js.map"}