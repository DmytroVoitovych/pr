{"mappings":"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","sources":["src/index.js","src/js/notify-params/notify-styles.js","src/js/modal/modalPagination.js","src/js/AutoForm/js/avtoLogin.js"],"sourcesContent":["import { btnDayNight } from './js/btnDayNight';\nimport { renderMoviesList, scrollToTop } from './js/container';\nimport MovieAPiServer from './RequestApi/requestAPI';\nimport { refs } from './js/refs';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { paramsNotify } from './js/notify-params/notify-styles';\nimport { modalPagination } from './js/modal/modalPagination';\nimport { funcLoginControl } from './js/AutoForm/js/avtoLogin';\nimport { funcCheck } from './js/AutoForm/js/avtoLogin';\n\nlet currentGroup = 'home';\n\nconst movieAPiServer = new MovieAPiServer();\nmovieAPiServer.getGenresList();\nNotify.init(paramsNotify);\n\nrefs.pagginationList.addEventListener('click', onClickPagginationList);\nrefs.form.addEventListener('submit', onSubmitForm);\nrefs.galleryList.classList.add('home');\nrefs.avtoLogin.addEventListener('click', funcLoginControl);\n// window.addEventListener(\"keydown\", toggleModalEscape);// футер модал ескейп\nfetchData();\n\nbtnDayNight();\nfuncCheck(); \n\n// function onClickPagginationList(event) {\n//   const currentPage = event.target.dataset.page;\n//   if (!currentPage) {\n//     return;\n//   }\n//   movieAPiServer.pageCounter = Number(currentPage);\n\nfunction checkCurrentPage() {\n  if (currentGroup === 'home') {\n    fetchData();\n  } else {\n    fetchMovieByQueryAgain();\n  }\n  scrollToTop();\n}\nfunction onClickPagginationList(event) {\n  const currentPage = event.target.dataset.page;\n  if (currentPage === '...') {\n    modalPagination(movieAPiServer.maxPages)\n      .then(page => {\n        if (Number(page) === movieAPiServer.pageCounter) {\n          return;\n        }\n        console.log('перехід на сторінку ', page);\n        movieAPiServer.pageCounter = Number(page);\n        checkCurrentPage();\n      })\n      .catch(error => console.log(error));\n    return;\n  }\n  if (!currentPage) {\n    return;\n  }\n  movieAPiServer.pageCounter = Number(currentPage);\n  checkCurrentPage();\n}\n\nfunction fetchData() {\n  movieAPiServer.fetchTopMovies().then(data => {\n    // console.log('page=', apiService.page, '  maxPages=', apiService.maxPages);\n    clearList();\n    renderMoviesList(data, movieAPiServer.pageCounter, movieAPiServer.maxPages);\n  });\n  // .catch(error => {\n  //   return error;\n  // });\n}\nconsole.log(document.querySelector('.js-auth'));\n\n\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const searchQuery = event.currentTarget.elements.searchQuery.value.trim();\n  refs.form.elements.searchQuery.value = '';\n  if (searchQuery === '') {\n    console.log('test');\n    Notify.failure('Please enter something', { width: '180px' });\n    return;\n  }\n  movieAPiServer.searchQuery = searchQuery;\n  const pageHome = movieAPiServer.pageCounter;\n  movieAPiServer.pageCounter = 1;\n  movieAPiServer\n    .fetchMovieByQuery()\n    .then(data => {\n      console.log(data);\n      if (data.results.length === 0) {\n        Notify.failure(\n          'Search result not successful.. Enter the correct movie name'\n        );\n        movieAPiServer.pageCounter = pageHome;\n        return;\n      }\n      movieAPiServer.maxPages = data.total_pages;\n      currentGroup = 'search';\n      clearList();\n      renderMoviesList(\n        data.results,\n        movieAPiServer.pageCounter,\n        movieAPiServer.maxPages\n      );\n    })\n    .catch(error => {\n      return error;\n    });\n}\nfunction fetchMovieByQueryAgain() {\n  movieAPiServer\n    .fetchMovieByQuery()\n    .then(data => {\n      clearList();\n      renderMoviesList(\n        data.results,\n        movieAPiServer.pageCounter,\n        movieAPiServer.maxPages\n      );\n    })\n    .catch(error => {\n      return error;\n    });\n}\nfunction clearList() {\n  refs.galleryList.innerHTML = '';\n  refs.pagginationList.innerHTML = '';\n}\n\n//  window.addEventListener('onload',funcControlArts);\n\n\n\n\n\n\n\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst paramsNotify = {\n  position: 'center-top',\n  timeout: 3000,\n  distance: '15px',\n  // fontAwesomeIconSize: '10px', //\n  width: '390px',\n\n  fontSize: '14px', //\n  cssAnimationStyle: 'from-top',\n  cssAnimationDuration: 600,\n  showOnlyTheLastOne: true,\n\n  useIcon: false,\n  clickToClose: true,\n  failure: {\n    background: 'rgba(0,0,0,0.1)',\n    textColor: '#FF001B',\n    notiflixIconColor: 'rgba(200,0,0,0.4)',\n  },\n  success: {\n    background: 'rgba(0,0,0,0.7)',\n    textColor: '#32c682',\n    notiflixIconColor: 'rgba(50,200,130,0.4)',\n  },\n};\nexport { paramsNotify };\n//  return Notify.failure('Search result not successful. Enter the correct movie name.');\n","import { refs } from '../refs';\nimport { close } from './getPost';\nimport { controlScreen } from './controlScreen';\nimport { funcControlArts } from '../arts';\n\n// refs.openModalBtn.addEventListener('click', toggleModal);\n\nexport function modalPagination(maxPages) {\n  const promise = new Promise((resolve, reject) => {\n    refs.closeModalBtn.addEventListener('click', onCloseModalPagination);\n    refs.formPagination.addEventListener('submit', onInputChange);\n    // refs.closeFormButton.addEventListener('click', onCloseModalPagination);\n    refs.backdropPagination.addEventListener('click', onClickBackdrop);\n    refs.modalPagination\n      .querySelector('#pagination-input')\n      .setAttribute('max', maxPages);\n    refs.backdropPagination.dataset.page = '0';\n\n    toggleModal();\n    let timer = null;\n    // document.querySelector('body').style = '';\n\n    // document.querySelector('body').classList.add('is-open');// мешали\n    // document.querySelector('body').classList.toggle('is-open');// мешали\n    timer = setInterval(() => {\n      if (refs.modalPagination.classList.contains('is-hidden')) {\n        const page = refs.backdropPagination.dataset.page;\n        clearInterval(timer);\n        if (Number(page) !== 0) {\n          resolve(page);\n          \n        } else {\n          reject('перехід не відбувся');\n        }\n      }\n    }, 300);\n  });\n\n  return promise;\n}\n\nfunction toggleModal() {\n   const scrollY = document.documentElement.style.getPropertyValue('--scroll-y'); \nconsole.log(scrollY);\n  refs.modalPagination.classList.toggle('is-hidden'); \n  funcControlArts(document.querySelectorAll('.t-js')); // полный контроль стилей\n\n  if (document.querySelector('[modal-pagination]').classList.contains('is-hidden')) {\n      \n          close.blockScroll('auto', ``, ``, '');\n          return window.scrollTo(0, parseInt(document.body.style.top || '0') * -1); \n        }\n\n  else { return close.blockScroll('scroll', `${scrollY}`, `${controlScreen()}`, 'fixed') };\n    \n}\n\n\n\nfunction onInputChange(event) {\n  event.preventDefault();\n  const page = event.currentTarget.elements.page.value;\n  refs.backdropPagination.dataset.page = page;\n  onCloseModalPagination();\n}\nfunction onCloseModalPagination(event) {\n  document.querySelector('body').classList.remove('is-open');\n  refs.formPagination.elements.page.value = '';\n  toggleModal(document.querySelector('body').classList);\n}\nfunction onClickBackdrop(event) {\n  if (event.target.classList.contains('backdrop')) {\n    onCloseModalPagination();\n  }\n  if (event.target.classList.contains('button_no')) {\n    onCloseModalPagination();\n  }\n}\n\n// document.addEventListener(\"keydown\", toggleModalEscape);// нужно тестировать\n\n//  function toggleModalEscape(e) {\n//     if (e.code === 'Escape') {\n//       refs.modalPagination.classList.add('is-hidden');\n//      return  !refs.modalPagination.classList.contains('is-hidden')   &&  window.removeEventListener('keydown', toggleModalEscape);\n//     }   //Валерия для удаления события нужна доп проверка  и второй аргумент в слушатели событий обьязателен\n//   }\n","\n\nexport const funcLoginControl = () => {  // функция ответствена за автологин\n   const controlLogin = document.querySelector('[data-auth]').dataset.auth = window.localStorage.getItem('auth');\n   \n    if (controlLogin != 'true') {   \n        \n    return document.querySelector('.js-auth').setAttribute('href', 'https://dmytrovoitovych.github.io/pr/js/AutoForm/form.html');\n  }\n      \n};\n\n\nexport const funcCheck = () => {\n    \n        const controlLogin = document.querySelector('[data-auth]').dataset.auth = window.localStorage.getItem('auth');\n        if (controlLogin != 'true') {\n        \n            return document.querySelector('.auth-chek').classList.add('visually-hidden');\n    }\n    \n        else {\n            document.querySelector('.auth-chek').style.opacity = '1';\n            return document.querySelector('.auth-chek').classList.remove('visually-hidden')\n            \n    }\n    \n\n };"],"names":["$kaaqg","parcelRequire","$krGWQ","$130c43d65fe646a7$var$toggleModal","scrollY","document","documentElement","style","getPropertyValue","console","log","refs","modalPagination","classList","toggle","$5G98m","funcControlArts","querySelectorAll","querySelector","contains","$71RVQ","close","blockScroll","window","scrollTo","parseInt","body","top","$bk7Qu","controlScreen","$130c43d65fe646a7$var$onInputChange","event","preventDefault","page","currentTarget","elements","value","backdropPagination","dataset","$130c43d65fe646a7$var$onCloseModalPagination","remove","formPagination","$130c43d65fe646a7$var$onClickBackdrop","target","$1f0dc3b9307be026$var$currentGroup","$1f0dc3b9307be026$var$movieAPiServer","$dy0eF","default","$1f0dc3b9307be026$var$checkCurrentPage","$1f0dc3b9307be026$var$fetchData","fetchMovieByQuery","then","data","$1f0dc3b9307be026$var$clearList","$5zoDb","renderMoviesList","results","pageCounter","maxPages","catch","error","scrollToTop","fetchTopMovies","galleryList","innerHTML","pagginationList","getGenresList","$iQIUW","Notify","init","position","timeout","distance","width","fontSize","cssAnimationStyle","cssAnimationDuration","showOnlyTheLastOne","useIcon","clickToClose","failure","background","textColor","notiflixIconColor","success","addEventListener","currentPage","Promise","resolve","reject","closeModalBtn","setAttribute","timer","setInterval","clearInterval","Number","form","searchQuery","trim","pageHome","length","total_pages","add","avtoLogin","auth","localStorage","getItem","btnDayNight","opacity"],"version":3,"file":"index.bf4a0d93.js.map"}